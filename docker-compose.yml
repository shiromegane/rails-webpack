version: '3'
services:
  db:
    image: mysql:5
    container_name: mysql
    tty: true
    stdin_open: true
    environment:
      MYSQL_ROOT_PASSWORD: password
    expose:
      - 3306
    ports:
      - 3306:3306
    volumes:
      - .docker/volumes/var/lib/mysql:/var/lib/mysql
      - .docker/volumes/etc/mysql/mysql.cnf:/etc/mysql/mysql.cnf
  kvs:
    image: redis:alpine
    container_name: redis
    tty: true
    stdin_open: true
    expose:
      - 6379
  rails:
    build: .docker/containers/rails
    image: rails:latest
    container_name: rails
    env_file: rails.env
    tty: true
    stdin_open: true
    expose:
      - 3000
    ports:
      - 3000:3000
    depends_on:
      - db
      - kvs
      - webpack
    links:
      - db
      - db:database
      - db:mysql
      - kvs
      - kvs:redis
      - webpack
    dns:
      - 1.1.1.1
      - 1.0.0.1
      - 8.8.8.8
      - 9.9.9.9
    volumes:
      - ./server:/app
      - bundle:/bundle
      - ~/.ssh:/root/.ssh
    command: sh -c "rm -f tmp/pids/server.pid && bundle install && bundle exec rails s -b 0"
  web:
    image: nginx:alpine
    container_name: web
    tty: true
    stdin_open: true
    ports:
      - 80:80
      - 443:443
    depends_on:
      - rails
    links:
      - rails
    dns:
      - 1.1.1.1
      - 1.0.0.1
      - 8.8.8.8
      - 9.9.9.9
    volumes:
      - .docker/volumes/etc/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
    command: sh -c "nginx -g 'daemon off;'"
  webpack:
    build: .docker/containers/webpack
    image: webpack:latest
    container_name: webpack
    tty: true
    stdin_open: true
    expose:
      - 8080
    ports:
      - 8080:8080
    dns:
      - 1.1.1.1
      - 1.0.0.1
      - 8.8.8.8
      - 9.9.9.9
    volumes:
      - ./client:/client
    command: sh -c "yarn install && yarn run dev"
  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    ports:
      - 9100:9100
    network_mode: host
    restart: always
  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
    ports:
      - 8888:8080
    restart: always
  uifd:
    image: uifd/ui-for-docker
    container_name: uifd
    ports:
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
volumes:
  bundle:
